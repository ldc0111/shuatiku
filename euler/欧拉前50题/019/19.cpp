/*************************************************************************
	> File Name: 19.cpp
	> Author:
	> Mail: 
	> Created Time: 2018年08月05日 星期日 11时29分03秒
 ************************************************************************/

#include <iostream>
using namespace std;

int days[13] ={0,//每个月有几天　非闰年
    31,28,31,30,
    31,30,31,31,
    30,31,30,31
};
int leap_years(int y){//返回是不是闰年，闰年返回１，非闰年返回０
    return (y % 4 == 0 && y % 100)||(y % 400 == 0);
}//闰年的判断条件有两个，一个是在非闰年能被４整除，不能被１００整除的，另一个数能被４００整除的，满足一个即可



int get_next_day(int y,int m,int d){//判断下一天的函数
    d++;//先加一
    if(d > days[m] + (m == 2 && leap_years(y))){//如果大与这一月的最大值，月分要判断是不是２月，同时是不是闰年，
        d = 1;//大于最大值变成１
    }
    return d;//返回天的日期数
}

int main(){
    int ans = 0,y = 1900,m = 1,d = 1,w = 1;//开始得到年月日，和是星期几
    do{
        printf("%d-%d-%d\n",y,m,d);//输出每天
        d = get_next_day(y,m,d);//计算下一天
        m += (d == 1);//计算下一月，如果ｉ等与１就表示是下一个月了
        y += (m == 13) && (m = 1);//如果m等与１３就表示是下一月了，同时与赋值ｍ　＝　１；
        w =(w + 1)%7;//星期循环
        if(d == 1&&w == 0 &&y > 1900)ans++;//判断题意，如果符合＋＋,如果不符合不加
    }while(y <= 2000 && m <= 12 && d <= 31);//循环条件，最大天
    printf("%d\n",ans);//输出答案，

    return 0;
}
